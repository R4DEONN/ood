(()=>{"use strict";class e{_observers=new Map;registerObserver(e,t=0){this._observers.has(e)||this._observers.set(e,t)}removeObserver(e){this._observers.delete(e)}notifyObservers(){const e=this.getChangedData(),t=Array.from(this._observers.entries()).sort(((e,t)=>t[1]-e[1]));for(const[s]of t)s.update(e)}getChangedData(){throw new Error("not implemented")}}class t{_minValue=1/0;_maxValue=-1/0;_accValue=0;_accCount=0;update(e){this._minValue>e&&(this._minValue=e),this._maxValue<e&&(this._maxValue=e),this._accValue+=e,++this._accCount}get minValue(){return this._minValue}get maxValue(){return this._maxValue}getAverage(){return this._accCount?this._accValue:this._accValue/this._accCount}}class s{temperature=0;humidity=0;pressure=0}const r=new class extends e{_temperature=0;_humidity=0;_pressure=760;getTemperature(){return this._temperature}getPressure(){return this._pressure}getHumidity(){return this._humidity}measurementsChanged(){this.notifyObservers()}setMeasurements(e,t,s){this._humidity=t,this._temperature=e,this._pressure=s,this.measurementsChanged()}getChangedData(){const e=new s;return e.humidity=this.getHumidity(),e.temperature=this.getTemperature(),e.pressure=this.getPressure(),e}},a=new class{update(e){console.log(`Current Temp: ${e.temperature}`),console.log(`Current Humidity: ${e.humidity}`),console.log(`Current Pressure: ${e.pressure}`),console.log("----------------")}};r.registerObserver(a);const u=new class{_temperatureData=new t;_pressureData=new t;_humidityData=new t;update({temperature:e,humidity:t,pressure:s}){this._temperatureData.update(e),this._humidityData.update(t),this._pressureData.update(s),console.log("Temperature:"),this.outputStats(this._temperatureData),console.log("----------------"),console.log("Humidity:"),this.outputStats(this._humidityData),console.log("----------------"),console.log("Pressure:"),this.outputStats(this._pressureData),console.log("----------------")}outputStats(e){console.log(`Max: ${e.maxValue}`),console.log(`Min: ${e.minValue}`),console.log(`Avg: ${e.getAverage()}`)}};r.registerObserver(u),r.setMeasurements(3,.7,760),r.setMeasurements(4,.8,761),r.removeObserver(u),r.setMeasurements(10,.8,761),r.setMeasurements(-10,.8,761)})();